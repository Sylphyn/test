<?php
/**
 * Created by PhpStorm.
 * User: phongnh
 * Date: 3/7/19
 * Time: 3:08 PM
 */



class FizzBuzzTest extends  \PHPUnit\Framework\TestCase
{

    private $fizzbuzz;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->fizzbuzz = new \App\Support\FizzBuzz();
    }

    /** @test */
    public function it_should_test_something()
    {


        $this->assertTrue($this->fizzbuzz->changeMe());

    }

    /** @test */
    public function first_number_is_one()
    {


        $this->assertEquals(1, $this->fizzbuzz->getData()[1]);
    }

    /** @test */
    public function thirs_number_is_fizz()
    {


        $this->assertEquals('Fizz', $this->fizzbuzz->getData()[3]);

    }

    /** @test */
    public function fifth_number_is_Buzz()
    {

        $this->assertEquals('Buzz', $this->fizzbuzz->getData()[5]);
    }

    /** @test */
    public function fifteen_number_is_FizzBuzz()
    {

        $this->assertEquals('FizzBuzz', $this->fizzbuzz->getData()[15]);

    }

    /** @test */
    public function getData_must_return_100_number()
    {

        $this->assertEquals(100, count($this->fizzbuzz->getData()));

    }

    /** @test */
    public function every_third_number_then_is_fizz()
    {
        $number = $this->fizzbuzz->getData();
        for ($i = 1; $i <= count($number); $i++) {
            if ($i % 3 == 0 && $i % 5 != 0) {
                $this->assertEquals('Fizz', $number[$i]);
            }
        }
    }

    /** @test */
    public function every_fifth_number_then_is_fizz()
    {
        $number = $this->fizzbuzz->getData();
        for ($i = 1; $i <= count($number); $i++) {
            if ($i % 5 == 0 && $i % 3 != 0) {
                $this->assertEquals('Buzz', $number[$i]);
            }
        }
    }
    /** @test */
    public function every_fifteen_number_then_is_fizz()
    {
        $number = $this->fizzbuzz->getData();
        for ($i = 1; $i <= count($number); $i++) {
            if ($i % 5 == 0 && $i % 3 == 0) {
                $this->assertEquals('FizzBuzz', $number[$i]);
            }
        }
    }
}
